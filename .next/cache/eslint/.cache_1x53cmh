[{"/Users/nemanja/development/react/meal-assistant-fe/pages/_app.tsx":"1","/Users/nemanja/development/react/meal-assistant-fe/pages/addFood.tsx":"2","/Users/nemanja/development/react/meal-assistant-fe/pages/index.tsx":"3","/Users/nemanja/development/react/meal-assistant-fe/pages/mealDetails.tsx":"4","/Users/nemanja/development/react/meal-assistant-fe/components/ClearMealButton.tsx":"5","/Users/nemanja/development/react/meal-assistant-fe/components/FoodTable.tsx":"6","/Users/nemanja/development/react/meal-assistant-fe/components/MealDetailsButton.tsx":"7","/Users/nemanja/development/react/meal-assistant-fe/components/NavBar.tsx":"8","/Users/nemanja/development/react/meal-assistant-fe/components/SearchInput.tsx":"9"},{"size":510,"mtime":1646502703204,"results":"10","hashOfConfig":"11"},{"size":3510,"mtime":1646579582933,"results":"12","hashOfConfig":"11"},{"size":2341,"mtime":1646666901872,"results":"13","hashOfConfig":"11"},{"size":3280,"mtime":1646579582931,"results":"14","hashOfConfig":"11"},{"size":452,"mtime":1646501398008,"results":"15","hashOfConfig":"11"},{"size":2481,"mtime":1646576835777,"results":"16","hashOfConfig":"11"},{"size":1517,"mtime":1646571104758,"results":"17","hashOfConfig":"11"},{"size":750,"mtime":1646580546522,"results":"18","hashOfConfig":"11"},{"size":1467,"mtime":1646666196751,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"166ugrp",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nemanja/development/react/meal-assistant-fe/pages/_app.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/pages/addFood.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/pages/index.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/pages/mealDetails.tsx",["48"],[],"import React, { useContext, useEffect, useState } from 'react'\nimport NavBar, { TAB } from '../components/NavBar'\nimport { GlobalContext } from '../providers/GlobalContextProvider'\nimport { calculateValueByPortionSize } from '../utils'\n\ninterface PortionSize {\n  id: number,\n  size: number\n}\n\nenum FoodField {\n  CALORIES = 'calories',\n  PROTEINS = 'proteins'\n}\n\nconst MealDetails = () => {\n  const { selectedMeal, setSelectedMeal } = useContext(GlobalContext);\n  const [portionSizes, setPortionSizes] = useState<Array<PortionSize>>([])\n\n  useEffect(() => {\n    populatePortionSizes()\n    return () => {\n      setSelectedMeal([])\n    }\n  }, [])\n\n  const populatePortionSizes = () => {\n    setPortionSizes(selectedMeal.map(food => ({ id: food.id, size: Number.parseInt(food.attributes.portionSize) })))\n  }\n\n  const handleInputChange = (foodId: number, newPortionSize: number) => {\n    const updatedPortionSizes = portionSizes.map(portionSize => {\n      if (foodId === portionSize.id) portionSize.size = newPortionSize\n      return portionSize\n    })\n\n    setPortionSizes(updatedPortionSizes)\n  }\n\n  const calculateSum = (field: FoodField) => {\n    const sum = selectedMeal.reduce((prevValue, food) => {\n      const foundFood = selectedMeal.find(f => f.id == food.id)\n      const portionSize = portionSizes.find(ps => ps.id === food.id)\n      if (!foundFood || !portionSize) return prevValue\n      return prevValue + ((foundFood.attributes[field] / 100 * portionSize.size) || 0)\n    }, 0)\n\n    return sum.toFixed(field === FoodField.CALORIES ? 0 : 1) || 0\n  }\n\n  return (\n    <div>\n      <div className='sticky top-0'>\n        <NavBar activeTab={TAB.HOME} />\n        {selectedMeal?.length > 1 && (\n          <div className='w-full text-center p-4 bg-gray-200 text-gray-600'>\n            Ukupno: <span className='font-bold'>{calculateSum(FoodField.CALORIES)}</span> kcal,\n            <span className='font-bold'> {calculateSum(FoodField.PROTEINS)}</span> p\n          </div>\n        )}\n      </div>\n      <div className='flex flex-col items-center mt-2'>\n        {selectedMeal.map(food => {\n          const portionSize = portionSizes.find(ps => ps.id === food.id)\n          if (!portionSize) return null\n\n          return (\n            <div key={food.id} className='flex flex-col md:flex-row justify-center items-center mb-6 p-4 border-b'>\n              <p className='flex items-center justify-center w-52 text-gray-600 mb-4 md:justify-start md:mb-0'>{food.attributes.name}</p>\n              <input\n                className='border p-2 rounded-xl focus:outline-none'\n                value={portionSize.size || 0}\n                onChange={e => handleInputChange(food.id, Number.parseInt(e.target.value))}\n              />\n              <p className='flex justify-center items-center w-24 h-12 p-2 bg-gray-100 rounded-xl m-4'>\n                {`${calculateValueByPortionSize(food.attributes.calories, portionSize.size).toFixed(0)} kcal`}\n              </p>\n              <p className='flex justify-center items-center w-24 h-12 p-2 bg-gray-100 rounded-xl'>\n                {`${calculateValueByPortionSize(food.attributes.proteins, portionSize.size).toFixed(1)} p`}\n              </p>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default MealDetails","/Users/nemanja/development/react/meal-assistant-fe/components/ClearMealButton.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/components/FoodTable.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/components/MealDetailsButton.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/components/NavBar.tsx",[],[],"/Users/nemanja/development/react/meal-assistant-fe/components/SearchInput.tsx",[],[],{"ruleId":"49","severity":1,"message":"50","line":25,"column":6,"nodeType":"51","endLine":25,"endColumn":8,"suggestions":"52"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'populatePortionSizes' and 'setSelectedMeal'. Either include them or remove the dependency array.","ArrayExpression",["53"],{"desc":"54","fix":"55"},"Update the dependencies array to be: [populatePortionSizes, setSelectedMeal]",{"range":"56","text":"57"},[640,642],"[populatePortionSizes, setSelectedMeal]"]